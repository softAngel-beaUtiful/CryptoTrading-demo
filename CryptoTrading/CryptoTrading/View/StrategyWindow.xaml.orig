<Window x:Class="TickQuant.View.StrategyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:TickQuant.View"
        xmlns:t="clr-namespace:TickQuant"
        xmlns:v="clr-namespace:TickQuant.ViewModel"
        mc:Ignorable="d"
        Title="策略窗口" Height="700" Width="1200" Closing="Window_Closing" Name="StrategyWin">
    <Window.Resources>
        <ObjectDataProvider x:Key="ChoosePriceType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:PriceType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseMarketDataType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:LimitMarket"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseDirection" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:TradeDirection"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseStrategyType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:StrategyType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseConditionType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:ConditionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseTimeCondition" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:TimeLogicsType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseExitPriceCondition" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:ExitContingentConditionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChoosePercentPoint" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:PercentPointType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseLocationType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:LocationType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseConditionLogics" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:ConditionLogicsType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="SetInstanceState" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:StrategyStateType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <ObjectDataProvider x:Key="ChooseContingentCondition" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:TQContingentConditionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ChooseLimitPriceSetting" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="t:LimitPriceSettingType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <local:RepeatableToStringConverter x:Key="RepeatToStringConverter" FalseValue="单次" TrueValue="重复" />
        <local:AverageEveryToStringConverter x:Key="AverageEveryToStringConverter" FalseValue="均价" TrueValue="分笔"/>
        <!--" local:ConditionsRelationConverter x:Key="ConditionRelationToStringConverter" FalseValue="而且" TrueValue="或者"/-->
        <local:TemplateIDToTemplateConverter x:Key="TemplateIDToTemplateConverter"></local:TemplateIDToTemplateConverter>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="60" Height="2*"></RowDefinition>
            <RowDefinition MinHeight="60" Height="2*"></RowDefinition>
            <RowDefinition MinHeight="90" Height="3*"></RowDefinition>
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Header="策略运行">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <!--显示数据：状态、名称、编号、描述-->
                <DataGrid Name="StrategyGrid" Grid.Row="0" AutoGenerateColumns="False" SelectionUnit="FullRow" 
                          ItemsSource="{Binding}" SelectedItem="{Binding ElementName=StrategyWin, Path=CurrentStrategy, UpdateSourceTrigger=PropertyChanged}"
                    CanUserReorderColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" SelectionChanged="StrategyGrid_SelectionChanged" Margin="-10,0,10,0">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="策略编号" Width="60" Binding="{Binding Path=InstanceId, Mode=OneTime}"/>
                        <DataGridTextColumn Header="策略名称" Binding="{Binding Path=StrategyName, Mode=OneTime}"/>
                        <DataGridTextColumn Header="类  型" Width="80" Binding="{Binding Path=StrategyType, Mode=OneTime}" />
                        <DataGridTextColumn Header="状态" Binding="{Binding InstanceState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="策略运行位置" Binding="{Binding Path=Location, Mode=OneTime}"/>
                        <DataGridTextColumn Header="描述"  MinWidth="50" Width="400" Binding="{Binding Path=Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>                    
                        <DataGridTemplateColumn Header="平仓策略名称">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
<<<<<<< .mine
                                    <ComboBox ItemsSource="{Binding ElementName=StrategyWin, Path=CloseStrategyLibs}" DisplayMemberPath="Name"                                              
                                             SelectedItem="{Binding ElementName=StrategyWin, Path=CurrentStrategy.CloseStrategy, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
=======
                                    <ComboBox ItemsSource="{Binding ElementName=StrategyWin, Path=CloseStrategyLibs}" DisplayMemberPath="Name" 
                                             SelectedItem="{Binding close_StrategyName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,  Converter={StaticResource TemplateIDToTemplateConverter }}"/>
>>>>>>> .r204
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellEditingTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding ElementName=StrategyWin, Path=CloseStrategyLibs}" DisplayMemberPath="Name"
                                              SelectedItem="{Binding ElementName=TQMain.ocStrategy, Path=CloseStrategy, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValuePath="Strategy"></ComboBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellEditingTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="手工单平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="服务器平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="订单数量" Binding="{Binding Path= OrderParams.Quant, Mode=TwoWay}"/>-->
                        <DataGridTextColumn Header="策略仓位" Binding="{Binding Path=StrategyPosition, Mode=OneWay}"/>
                        <DataGridCheckBoxColumn Header="均价/分笔" Binding="{Binding Path=AverageOrEvery, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AverageEveryToStringConverter}}"/>
                        <DataGridCheckBoxColumn Header="循环" Binding="{Binding Path=Repeatable, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource RepeatToStringConverter}}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" >
                    <Button Name="btnStrategyStart" Height="20" Margin="10" ToolTip="启动策略运行" Click="btnStrategyStart_Click">启动</Button>
                    <Button Name="btnStrategyStop" Height="20" Margin="10" ToolTip="终止策略运行，手工维护已有持仓" Click="btnStrategyStop_Click">终止</Button>
                    <Button Name="btnStrategyDelete" Height="20" Margin="10" ToolTip="从策略运行库中移出" Click="btnStrategyDelete_Click">清除</Button>
                    <Button Name="btnStrategyExit" Height="20" Margin="10" ToolTip="退出策略运行，平掉所有策略持仓" Click="btnStrategyExit_Click">退出清仓</Button>
                </StackPanel>
            </Grid>
        </GroupBox>
        <!--三种类型的条件单：时间（准时、时间条件）、价格条件、开市条件-->
        <!--价格条件含服务器预埋单、止损单等-->
        <!--显示数据：条件类型：时间条件/价格条件、条件关系（与/或）、价格条件（合约、条件类型、触发价格）、
        时间条件（时间关系、触发时间）。双向绑定-->
        <!--订单参数管理-->
        <GroupBox Grid.Row="1" Header="策略模板库" Grid.Column="0" MinHeight="60">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <DataGrid Name="StrategyLibGrid" Grid.Column="0" AutoGenerateColumns="False" ItemsSource="{Binding Path=StrategyList}" SelectionUnit="FullRow" 
                          CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" SelectionChanged="StrategyLibGrid_SelectionChanged">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="模板编码" Binding="{Binding Path=ID}"/>
                        <DataGridTextColumn Header="模板名称" Width="120"  Binding="{Binding Path=Name}"/>
                        <DataGridComboBoxColumn Header="类型" Width="100" ItemsSource="{Binding Source={StaticResource ChooseStrategyType}}" SelectedValueBinding
                                          ="{Binding Path=StrategyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <DataGridTextColumn Header="描述"  MinWidth="50" Width="500" Binding="{Binding Path=Description, Mode=TwoWay}"/>
                        <!--DataGridTextColumn Header="开仓条件" Binding="{Binding Path=StrategyName}"/-->
                        <DataGridTemplateColumn Header="平仓策略模板名称">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox  ItemsSource="{Binding ElementName=StrategyWin, Path=CloseStrategyLibs}" DisplayMemberPath="Name" 
                                             SelectedValue="{Binding CloseStrategyName,Mode=TwoWay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="手工单平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StrategyType}" Value="服务器平仓策略">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                        <!--<DataGridTextColumn Header="平仓策略模板名称" Width="120"  Binding="{Binding Path=CloseStrategyName}"/>-->
                        <!--DataGridTextColumn Header="" Binding="{Binding Path=StrategyPosition}"/>
                            <DataGridCheckBoxColumn Header="" Binding="{Binding Path=Repeatable, Converter={StaticResource BooleanToStringConverter}}"/-->
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" >
                    <Button Name="btnStrategyTemplateUse" Content="启用" Margin="10" Click="btnStrategyTemplateUse_Click"></Button>
                    <Button Name="btnStrategyTemplateDelete" Content="删除" Margin="10" Click="btnStrategyTemplateDelete_Click"></Button>
                </StackPanel>
            </Grid>
        </GroupBox>
        <Grid Grid.Row="2">
            <GroupBox Header="策略(模板)详情" MinHeight="100" DataContext="strategyLib" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90*"></ColumnDefinition>
                        <ColumnDefinition Width="10*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical">
                        <WrapPanel>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,10">策略(模板)编码</TextBlock>
                            <TextBox Name="txtStrategyID" Width="120" Margin="10,0,10,10" HorizontalAlignment="Left" 
                                     Text="{Binding Path=strategyLibName, Mode=TwoWay}" IsReadOnly="True"></TextBox>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,10">策略(模板)名称</TextBlock>
                            <TextBox Name="txtStrategyName" Width="200" Margin="10,0,10,10" HorizontalAlignment="Left" ></TextBox>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,10">策略(模板)类型</TextBlock>
                            <ComboBox Name="cmbStrategyType" Margin="10,0,0,10" Width="120" ItemsSource="{Binding Source={StaticResource ChooseStrategyType}}" SelectedValue
                                 ="{Binding Path=StrategyType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <!--CheckBox Name="chkAvgOrEvery" HorizontalAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Center" IsChecked="{Binding Path=AverageOrEvery}">分笔或平均</-->
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,10">策略运行位置</TextBlock>
                            <ComboBox Name="cmbStrategyLocation" Width="80" Margin="10,0,0,10" HorizontalAlignment="Left"  ItemsSource="{Binding Source={StaticResource ChooseLocationType}}" SelectedValue
                                 ="{Binding Path=Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></ComboBox>
                            <!--CheckBox Name="chkRepeatable" HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="10,0,0,0" IsChecked="{Binding Path=Repeatable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">重复</CheckBox-->
                            <!--TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,0,0">平仓策略模板名称</TextBlock>
                            <ComboBox Name="cmbCloseStrategyName" Width="150" ItemsSource="{Binding ElementName=StrategyWin, Path=CloseStrategyLibs}" DisplayMemberPath="Name" />-->
                             <TextBlock Margin="10,0,0,10" HorizontalAlignment="Center" VerticalAlignment="Center">策略(模板)描述</TextBlock>
                            <TextBox Name="txtStrategyDescription" Width="500" Margin="5,0,0,10" HorizontalAlignment="Left" 
                                     Text="{Binding Path=strategyDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <TextBlock Text="报单" Margin="5,5,0,5" FontSize="16"></TextBlock>
                        <DataGrid Name="OrderParamsGrid" AutoGenerateColumns="False" ItemsSource="{Binding orderParamsList}" CanUserAddRows="True" 
                             CanUserDeleteRows="true" SelectionUnit="FullRow" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="合约" Binding="{Binding Path=strInstrument_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridComboBoxColumn Header="价格类型" ItemsSource="{Binding Source={StaticResource ChooseMarketDataType}}" SelectedValueBinding
                                          ="{Binding Path=cOrder_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >

                                </DataGridComboBoxColumn>
                                <DataGridComboBoxColumn Header="限价设置" ItemsSource="{Binding Source={StaticResource ChooseLimitPriceSetting}}" SelectedValueBinding="{Binding Path=cLimit_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridComboBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding cOrder_type}" Value="市价">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridComboBoxColumn.CellStyle>
                                </DataGridComboBoxColumn>
                                <DataGridTextColumn Header="限价调整点数/价格" Binding="{Binding Path=dLimit_value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding cOrder_type}" Value="市价">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridComboBoxColumn Header="交易方向" ItemsSource="{Binding Source={StaticResource ChooseDirection}}" SelectedValueBinding="{Binding Path=cOpen_direction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="数量" Binding="{Binding Path=iVolume_total, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <TextBlock Text="条件列表" Margin="5,5,0,5" FontSize="16"></TextBlock>
                        <DataGrid x:Name="conditionlistGrid" ItemsSource="{Binding}" AutoGenerateColumns="False" SelectionUnit="FullRow" CanUserAddRows="True" CanUserDeleteRows="True" 
                             CanUserReorderColumns="True" MinHeight="70" Height="90">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="条件关系" ItemsSource="{Binding Source={StaticResource ChooseConditionLogics}}" SelectedValueBinding="{Binding Path=conditionLogics, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridComboBoxColumn Header="条件类型" ItemsSource="{Binding Source={StaticResource ChooseConditionType}}" SelectedValueBinding="{Binding conditionType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <DataGridCheckBoxColumn Header="开市即成交" Binding ="{Binding Path=timeStruct.ExchangeIsOpenning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridCheckBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding timeStruct.ExchangeIsOpenning}" Value="true">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机价格条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="服务器条件单">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridCheckBoxColumn.CellStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridComboBoxColumn Header="时间触发条件" ItemsSource="{Binding Source={StaticResource ChooseTimeCondition}}" SelectedValueBinding="{Binding Path=timeStruct.timeLogics,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridComboBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding timeStruct.ExchangeIsOpenning}" Value="true">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机价格条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="服务器条件单">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridComboBoxColumn.CellStyle>
                                </DataGridComboBoxColumn>
                                <DataGridTextColumn Header="触发时间" Binding="{Binding Path=timeStruct.TrigerTime, Mode=TwoWay,StringFormat={}{0:yyyyMMdd hh:mm:ss}}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding timeStruct.ExchangeIsOpenning}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机价格条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding conditionType}" Value="服务器条件单">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="合约代码" Binding="{Binding Path=priceStruct.InstrumentID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机时间条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridComboBoxColumn Header="价格类型" ItemsSource="{Binding Source={StaticResource ChoosePriceType}}" SelectedValueBinding="{Binding Path=priceStruct.priceType,Mode=TwoWay}">
                                    <DataGridComboBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机时间条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridComboBoxColumn.CellStyle>
                                </DataGridComboBoxColumn>
                                <DataGridComboBoxColumn Header="价格触发条件" ItemsSource="{Binding Source={StaticResource ChooseContingentCondition}}" SelectedValueBinding="{Binding Path=priceStruct.contingentCondition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridComboBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机时间条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridComboBoxColumn.CellStyle>
                                </DataGridComboBoxColumn>
                                <DataGridTextColumn Header="触发价格" Binding="{Binding Path=priceStruct.TrigerPrice, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机时间条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridComboBoxColumn IsReadOnly="False" Header="百分比/点数" ItemsSource="{Binding Source={StaticResource ChoosePercentPoint}}">
                                    <DataGridComboBoxColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding conditionType}" Value="本机时间条件">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridComboBoxColumn.CellStyle>
                                </DataGridComboBoxColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center">
                        <Button x:Name="btnAdd" Content="添加" Grid.Column="1"  Margin="10" VerticalAlignment="Top" Click="btnAdd_Click"/>
                        <Button x:Name="btnUpdate" Content="更新" Grid.Column="1" Margin="10" VerticalAlignment="Top" Click="btnUpdate_Click" />
                        <Button x:Name="btnDelete" Content="清除" Grid.Column="1" Margin="10" VerticalAlignment="Top" Click="btnDelete_Click" />
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</Window>